#define ECHO_PIN 3
#define TRIGGER_PIN 4
#define GREEN 10 
#define YELLOW 11
#define RED 12
unsigned long lastTimeUltrasonicTrigger = millis();
unsigned long ultrasonicTriggerDelay = 100;

volatile unsigned long pulseInTimeBegin;
volatile unsigned long pulseInTimeEnd;
volatile bool newDistanceAvailable = false;

void triggerUltrasonicSensor(){
  digitalWrite(TRIGGER_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER_PIN, LOW);
}
double getUltrasonicDistance()
{
  unsigned long durationStart = millis();
  double durationMicroseconds = pulseInTimeEnd - pulseInTimeBegin;
  unsigned long durationEnd = millis();
  double distance = durationMicroseconds / 58.0; //cm
  unsigned long durationCode = durationEnd-durationStart;

  return distance; 
  //distance = duration * speed
  //340 m/s --> 0.034 cm/us
  //duration * (0.034/2)  
}

void echoPinInterrupt()
{
  if(digitalRead(ECHO_PIN) == HIGH){
    //rising
    pulseInTimeBegin = micros();
  }
  else{
    //falling
    pulseInTimeEnd = micros();
    newDistanceAvailable = true; 
  }
}
void setup() {
  Serial.begin(115200);
  pinMode(ECHO_PIN, INPUT);
  pinMode(TRIGGER_PIN, OUTPUT);
  attachInterrupt(digitalPinToInterrupt(ECHO_PIN),
                  echoPinInterrupt,
                  CHANGE);
  pinMode(YELLOW, OUTPUT);
  pinMode(GREEN, OUTPUT);
  pinMode(RED, OUTPUT);
}

void loop() {
  unsigned long timeNow = millis();
  if(timeNow - lastTimeUltrasonicTrigger > ultrasonicTriggerDelay)
  {
    lastTimeUltrasonicTrigger += ultrasonicTriggerDelay;
    triggerUltrasonicSensor();
  }
  if(newDistanceAvailable){
    newDistanceAvailable = false;
    double distance = getUltrasonicDistance();
    Serial.println(distance);
    if(distance > 100){
      digitalWrite(GREEN, HIGH);
      digitalWrite(YELLOW, LOW);
      digitalWrite(RED, LOW);
    }
    if(distance>=15 && distance<=100){
      digitalWrite(GREEN, LOW);
      digitalWrite(YELLOW, HIGH);
      digitalWrite(RED, LOW);
    }
    if(distance < 15){
      digitalWrite(GREEN, LOW);
      digitalWrite(YELLOW, LOW);
      digitalWrite(RED, HIGH);
    }
  }
}
